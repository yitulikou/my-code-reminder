import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.regex.Matcher;
import java.util.regex.Pattern;


/**
 *
 * @author mac
 */
public class Mapper {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws FileNotFoundException, IOException {
       
       try( BufferedReader file = new BufferedReader(new InputStreamReader(System.in)))
       {
           String line;
           while((line = file.readLine()) != null )
               {
                  String[] str = line.split("\\s+"); 
                  if(str.length == 4)//rule 1
                  {
                      if(str[0].equals("en")||str[0].equals("en.m"))//rule 2
                      {
                          String exe1 = "(^Gadget_definition_talk:)|(^Topic:)|(^Gadget_definition:)|(^Gadget_talk:)|(^TimedText:)|(^Gadget:)|(^TimedText_talk:)|(^Draft:)|(^Draft_talk:)|(^Template:)|(^Template_talk:)|(^Help:)|(^Help_talk:)|(^Category:)|(^Special:)|(^Category_talk:)|(^Media:)|(^Talk:)|(^Portal:)|(^User:)|(^Portal_talk:)|(^User_talk:)|(^Wikipedia:)|(^Wikipedia_talk:)|(^File:)|(^Education_Program:)|(^File_talk:)|(^Education_Program_talk:)|(^MediaWiki:)|(^MediaWiki_talk:)|(^Book:)|(^Book_talk:)|(^Module:)|(^Module_talk:)"
                                   ;
                          String exe2 = exe1.replace(":", "%3a");
                        Pattern pattern1 = Pattern.compile(exe1,Pattern.CASE_INSENSITIVE);
                        Matcher match1 = pattern1.matcher(str[1]);
                        Pattern pattern2 = Pattern.compile(exe2,Pattern.CASE_INSENSITIVE);
                        Matcher match2 = pattern2.matcher(str[1]);
                        if (!match1.find()&&!match2.find())//rule 3 & 4
                        {
                            if(Character.isUpperCase(str[1].charAt(0))||!Character.isLetter(str[1].charAt(0)))//rule 5
                            {
                                String exe3 = "(\\.png$)|(\\.gif$)|(\\.jpg$)|(\\.jpeg$)|(\\.tiff$)|(\\.tif$)|(\\.xcf$)"
                                        + "|(\\.mid$)|(\\.ogg$)|(\\.ogv$)|(\\.svg$)|(\\.djvu$)|(\\.oga$)"
                                        + "|(\\.flac$)|(\\.opus$)|(\\.wav$)|(\\.webm$)|(\\.ico$)|(\\.txt$)";
                                String exe4 = "(^404_error/$)|(^Main_Page$)|(^Hypertext_Transfer_Protocol$)|(^Search$)";
                                Pattern pattern3 = Pattern.compile(exe3,Pattern.CASE_INSENSITIVE);
                                Matcher match3 = pattern3.matcher(str[1]);
                                Pattern pattern4 = Pattern.compile(exe4);
                                Matcher match4 = pattern4.matcher(str[1]);
                                if(!match3.find()&&!match4.find())//rule 6 & 7
                                {

                                    String name = System.getenv("mapreduce_map_input_file");
                                    String getDate = name.substring(name.length()-29);
                                    String[] date = getDate.split("\\-");
                                    String day = date[1].substring(date[1].length()-2);
                                    String month = date[1].substring(0, date[1].length()-2);
                                    String dayPage = str[2] + "_" +day;
                                    String word = str[1] + month;
                                    System.out.println(word + "\t" + dayPage);    
                                }
                            }
                        }
                      }
               }
                  
       }
           
    }
        // TODO code application logic here
    }
    
}
